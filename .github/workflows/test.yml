name: ISCC Tests

on: [push, pull_request]

jobs:
  Tests:

    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        sdk: 10.0.19041.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: pip install poetry==1.1.6

    - name: Get poetry venvs dir
      id: poetry-venvs
      run: |
        echo "::set-output name=dir::$(poetry config virtualenvs.path)"

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.poetry-venvs.outputs.dir }}
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

#    - name: Get cache dir for binaries
#      id: bin-cache
#      run: |
#        echo "::set-output name=dir::$(poetry run python -m iscc.app_dir)"
#
#    - name: Cache binary dependencies
#      id: cache-bins
#      uses: actions/cache@v2
#      with:
#        path: ${{ steps.bin-cache.outputs.dir }}
#        key: ${{ runner.os }}-bins-1

    - name: Run pytest
      run: poetry run pytest -q  -m "not optional" tests

    - name: Install dependencies with extras and optional features
      run: poetry install --extras "turbo optional"

    - name: Run pytest with extras
      run: poetry run pytest -q -m optional tests
